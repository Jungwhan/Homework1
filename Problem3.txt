Suppose I need to compute the series f subscript n equals f subscript n minus 1 end subscript superscript 2. If the value f0 = 2, what is the maximum n that can be stored in the following C++ data types, assuming that an int is 2 bytes, a long int is 4 bytes, and each byte stores 4 bits?

f0 = 2
f1 = 4
f2 = 8
f3 = 16
f4 = 32
f5 = 64
...
fn = 2^(1+n)

a) int
2bytes = 8bits
min: -32,768
max: 32,767
2^(1+n) =<  32,767
n =< 14
Therefore, the f14 could be stored in int data types.

b) long int
4bytes = 16bits
min: -2,147,483,648
max:2,147,483,647
2^(1+n) =< 2,147,483,647
n =< 30
Therefore, the f30 could be stored in long int data types.

c) unsigned long int
4bytes = 16bits
min:0
max:4,294,967,295
2^(1+n) =< 4,294,967,295
n =< 31
Therefore, the f31 could be stored in unsigned long int data types.
